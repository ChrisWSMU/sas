{ "name": "Sas Program",
  "scopeName": "source.sas",
  "fileTypes": ["sas"],
  "comment": "A work in progress--improves over the existing in that it populates symbols, and handles comments more gracefully.",
  "repository": {
      "star-comment": {"match": "r"}
    },
  "patterns": [
    {  "name": "keyword.control.sas",
       "match": "(?i:\\b(if|while|until|for|do|end|then|else|run|quit|cancel)\\b)"
    },
    {  "name": "keyword.other.sas",
       "match": "(?i:\\b((data|set|merge)\\s+(\\w+))\\b)",
       "captures": {
           "2": { "name": "support.function.sas" },
           "3": {"name": "entity.name.function.sas"}
       }
    },
    {  "name": "keyword.other.sas",
       "match": "(?i:(%(macro|mend|do|if|then|end|while|until|goto|include)))\\s*(\\w*)",
       "captures": {
          "1": {"name": "support.class.sas"},
          "3": { "name": "entity.name.function.sas" }
       }
    },
    { "begin": "(?i:\\bproc\\s*sql\\s*;)",
      "end": "(?i:\\bquit\\s*;)",
      "name": "sql.block.sas",
      "patterns": [
        {
          "include": "#star-comment"
          },
        {  "name": "comment.block.sas",
           "begin": "^(\\s|[;%])*?\\*",
           "end": ";",
           "comment": "Trying to match anything where the only things to the left of the star are whitespace or a semicolon.  This seems to take care of line comments as well!"
        },
        {
          "include": "source.sql"
        }
      ],
      "comment": "Looks like for this to work there must be a *name* as well as the patterns/include bit."
    },
    {  "name": "keyword.datastep.sas",
       "match": "(?i:\\b(by|label|format)\\b)"
    },
    {  "name": "meta.function-call.sas",
       "match": "(?i:\\b(proc (\\w+))\\b)",
       "captures": {
        "2": { "name": "support.class.sas" }
        }
    },
    {  "name": "variable.language.sas",
       "match": "(?i:\\b(_n_|_error_)\\b)"
    },
    {  "name": "comment.block.sas",
       "begin": "^\\s*\\*",
       "end": ";",
       "comment": "This should handle simple comments where star is the first non-whitespace char on the line."
    },
    {  "name": "comment.block.sas",
       "begin": "(?<=;)\\s*\\*",
       "end": ";",
       "comment": "This should handle 'hanging' comments where there is executable code to the left of the comment."
    },
    {  "name": "comment.block.sas",
       "begin": "/\\*",
       "end": "\\*/"
    },
    {  "name": "keyword.operator.arithmetic.sas",
       "match": "[\\+/*^]"
    },
    {  "name": "keyword.operator.assignment.sas",
       "match": "\\b(?i:(eq|ne|gt|ge|lt|le|=|!=|^=))\\b"
    },
    {  "name": "constant.numeric.sas",
       "match": "\\b\\d+\\b"
    },
    {  "name": "constant.date.sas",
       "match": "(?i:['\"]\\d{1,2}(jan|feb|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d{2,4}['\"]d)"
    },
    {  "name": "string.quoted.single.sas",
       "match": "'.+'"
    },
    {  "name": "string.quoted.double.roy",
       "match": "\".+\""
    }
  ],
  "uuid": "7e721b1e-6265-4865-bc4b-308d49affba1"
}

